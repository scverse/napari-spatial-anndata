[metadata]
name = napari-spatialdata
url = https://github.com/scverse/napari-spatialdata.git
author = giovanni palla
author_email = giov.pll@gmail.com
project_urls =
        Bug Tracker = https://github.com/scverse/napari-spatialdata/issues
        Documentation = https://github.com/scverse/napari-spatialdata#README.md
        Source Code = https://github.com/scverse/napari-spatialdata
        User Support = https://github.com/scverse/napari-spatialdata/issues

license = BSD-3-Clause
description = Interactive visualization of spatial omics data with napari
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Developers
    Framework :: napari
    Topic :: Software Development :: Testing
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Operating System :: OS Independent
    License :: OSI Approved :: BSD License


[options]
packages = find:
include_package_data = True
python_requires = >=3.9
setup_requires = setuptools_scm
# add your package requirements here
install_requires =
    numpy
    magicgui
    qtpy
    numba
    anndata
    scikit-image
    napari
    loguru
    typing_extensions>=4.8.0
    napari-matplotlib
    scikit-learn
    spatialdata>=0.0.15

package_dir =
    =src


[options.extras_require]
test =
    tox
    pytest  # https://docs.pytest.org/en/latest/contents.html
    pytest-cov  # https://pytest-cov.readthedocs.io/en/latest/
    pytest-qt  # https://pytest-qt.readthedocs.io/en/latest/
    pre-commit>=2.9.0
    towncrier>=21.3.0

doc =
    sphinx>=4.5
    sphinx-book-theme>=1.0.0
    myst-parser
    sphinxcontrib-bibtex>=1.0.0
    sphinx-autodoc-typehints>=1.11.0
    sphinx-autobuild
    scanpydoc
    # For notebooks
    ipykernel
    ipython
    sphinx-copybutton
    sphinx-qt-documentation
    myst-nb

readthedocs =
	pydantic<2

all =
    PyQt5

[options.packages.find]
where = src

[options.package_data]
napari_spatiadata = napari.yaml

[options.entry_points]
napari.manifest =
    napari-spatialdata = napari_spatialdata:napari.yaml
console_scripts =
  spatialdata = napari_spatialdata.__main__:main

[tool:pytest]
python_files = test_*.py
testpaths = tests/
xfail_strict = true
qt_api=pyqt5
; addopts = -n auto
